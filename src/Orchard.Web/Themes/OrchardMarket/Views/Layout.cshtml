@functions {
	string CalcuClassify(IEnumerable<string> zoneNames, string classNamePrefix) {
		var zoneCounter = 0;
		var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : ""; }).ToArray());
		return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
	}
}
@{
	SetMeta("X-UA-Compatible", "IE=edge,chrome=1");
	Style.Include("Style.min.css");
	Style.Include("Layout.min.css");
    Style.Include("Fonts.css");
    Script.Require("jQuery");
	Script.Require("OrchardMarket.Common");

	var asideClass = CalcuClassify(new[] { "AsideFirst" }, "aside-");
	if (HasText(asideClass)) {
		Model.Classes.Add(asideClass);
	}
	
	var tripleClass = CalcuClassify(new[] { "TripleFirst", "TripleSecond", "TripleThird" }, "triple-");
	if (HasText(tripleClass)) {
		Model.Classes.Add(tripleClass);
	}

	var quadClass = CalcuClassify(new[] { "FooterQuadFirst", "FooterQuadSecond", "FooterQuadThird", "FooterQuadFourth" }, "quad-");
	if (HasText(quadClass)) {
		Model.Classes.Add(quadClass);
	}

	var contentHeaderClass = CalcuClassify(new[] { "ContentHeader" }, "content-header-");
	if (HasText(contentHeaderClass)) {
		Model.Classes.Add(contentHeaderClass);
	}

	Model.Id = "site-layout";
	var tag = Tag(Model, "div");
}
@tag.StartElement
	<div id="site-header" class="center-layout">
		<div class="group">
			<div id="main-nav">
				<div class="bg-wrapper left">
					<div class="bg-wrapper right">
						<div class="navigation-wrapper">
							<div class="main-navigation">
								@Display(Model.Navigation)
							</div>
							@Display.UserNavigation_Main()
						</div>
					</div>    
				</div>
			</div>
		</div>
		<div class="group">
			<div id="user-nav">
				<div class="bg-wrapper left">
					<div class="bg-wrapper right">
						<div class="navigation-wrapper">
							@Display.UserNavigation_Sub()
						</div>
					</div>    
				</div>
			</div>
		</div>
		<div id="branding">
			<a class="logo" href="@Url.Content("~/")"></a>
		</div>
	</div>

	<div id="before-content" class="center-layout">
		@Display(Model.BeforeContent)
	</div>

	<div id="site-content">
		<div class="center-layout">
			<div class="bg-wrapper left">
				<div class="bg-wrapper right">
					<div class="bg-wrapper center">
						<div class="content-main">
							<div id="content-header-wrapper" class="group">
								<div class="title-wrapper">
                                    @Display(Model.TitleZone)
								</div>
								@if (Model.ContentHeader != null) { @Display(Model.ContentHeader) }
							</div>
                            <div id="content-wrapper" class="group">
                                @if(Model.Messages != null) {
                                <div id="messages-zone-wrapper">
                                    @Display(Model.Messages)
                                </div>
                                }
                                @if (Model.AsideFirst != null) { <div id="aside-first-zone-wrapper">@Display(Model.AsideFirst)</div> }
                                <div id="content-zone-wrapper">
                                    @Display(Model.Content)
                                </div>
                            </div>
							@if (Model.AfterContent != null) {
								<div id="after-content-wrapper">
									@Display(Model.AfterContent)
								</div>
							}
							@if (Model.TripleFirst != null || Model.TripleSecond != null || Model.TripleThird != null) {
								<div id="triples-wrapper" class="group">
									@if (Model.TripleFirst != null) { @Display(Model.TripleFirst) }
									@if (Model.TripleSecond != null) { @Display(Model.TripleSecond)}
									@if (Model.TripleThird != null) { @Display(Model.TripleThird)}
								</div>
							}
							@if (Model.FooterQuadFirst != null || Model.FooterQuadSecond != null || Model.FooterQuadThird != null || Model.FooterQuadFourth != null) {
								<div id="footer-quads-wrapper" class="group">
									@if (Model.FooterQuadFirst != null) { @Display(Model.FooterQuadFirst) }
									@if (Model.FooterQuadSecond != null) { @Display(Model.FooterQuadSecond) }
									@if (Model.FooterQuadThird != null) { @Display(Model.FooterQuadThird) }
									@if (Model.FooterQuadFourth != null) { @Display(Model.FooterQuadFourth) }
								</div>
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	@Display.Footer()
@tag.EndElement